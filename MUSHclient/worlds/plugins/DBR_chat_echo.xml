<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<muclient>
<plugin
   name="DBR_Chat_Echo"
   author="Braska"
   id="55616ea13339bc68e963e1f8"
   language="Lua"
   purpose="Control whether certain channels get hidden from main output"
   date_written="2011-07-27 01:00:00"
   requires="4.75"
   version="1.0"
   save_state="y"
   sequence="-8999"
>
<!-- sequence must be before 0 to not double trigger world triggers -->
<!-- sequence must be after channels plugin to capture unechoed info -->
<!--

Thanks to Fiendish of Aardwolf who provided the base and starting point for all of this.
Original files sourced from: https://github.com/fiendish/aardwolfclientpackage

Thank you!!

My Github : https://github.com/Xinefus-Braska

 -->

<description trim="y">
USAGE:

   chats echo on      : show all channels in main window
   chats echo off     : do not show any channels in main window
   chats echo custom  : select a custom list of channels to show in the main window
</description>

</plugin>
<triggers>

<trigger
   enabled="n"
   name="OOC"
   match="^\<(OOC|IMM)\> (.+)$"
   regexp="y"
   script="channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Wartalk"
   match="^\[WAR\] (.+)$"
   regexp="y"
   script="channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="IMM"
   match="^\[IMM\] (.+)$"
   regexp="y"
   script="channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Music"
   match="^\[MUSIC\] (.+)$"
   regexp="y"
   script="channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Newbie"
   match="^\[(New-Player|Immortal)\] (.+)$"
   regexp="y"
   script="channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Question"
   match="^\[Question\] (.+)$"
   regexp="y"
   script="channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="RP_Chat"
   match="^\(Chat\) (.+)$"
   regexp="y"
   script="channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Race"
   match="^\<(Race)\> (.+)$"
   regexp="y"
   script="channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Clan"
   match="^\<Clan\> (.+)$"
   regexp="y"
   script="channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Yell"
   match="^\{Area-Yell\} (.+)$"
   regexp="y"
   script="channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="FriendChat"
   match="\{(FriendChat)\} (.+) \'(.+)\'"
   regexp="y"
   script="channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Scouter"
   match="\[Scouter -(.+)\] (.+)$"
   regexp="y"
   script="channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="IMM_Logs"
   match="^(Log|Comm|Build|Monitor): (.+)$"
   regexp="y"
   script="non_channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Battle_Arena"
   match="^\[BATTLE ARENA\] (.+)$"
   regexp="y"
   script="non_channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="RP_Story"
   match="^\[RP-STORY (.+)\] (.+)$"
   regexp="y"
   script="non_channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Clan_Info"
   match="^\[Clan-Info\] (.+)$"
   regexp="y"
   script="non_channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Friend_Info"
   match="\[Friend-Info\] (.+)"
   regexp="y"
   script="non_channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="News_Flash"
   match="^\[NEWS-FLASH\] (.+)$"
   regexp="y"
   script="non_channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Info"
   match="^\[(Info|A - Info)\] (.+)$"
   regexp="y"
   script="non_channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="HighScore"
   match="^\[HighScore\] (.+)$"
   regexp="y"
   script="non_channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Auto_Events"
   match="^\[Auto-Event\] (.+)$"
   regexp="y"
   script="non_channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="Auction_House"
   match="\[DBR Auction House\] (.+)$"
   regexp="y"
   script="non_channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="say_get"
   match="^(.+) (says|says in an electronic voice), (.+)$"
   regexp="y"
   script="non_channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   name="say"
   match="You say (.+)$"
   regexp="y"
   script="non_channel"
   omit_from_output="y"
   sequence="100"
   send_to="12"
><send>StopEvaluatingTriggers(true)</send>
</trigger>

<trigger
   enabled="n"
   match="^$"
   regexp="y"
   name="end_gag_omit"
   group="end_gag"
   omit_from_output="y"
   sequence="100"
   send_to="12"
>
<send>EnableTriggerGroup("end_gag", false)</send>
</trigger>

<trigger
   enabled="n"
   match="."
   regexp="y"
   name="end_gag_keep"
   group="end_gag"
   omit_from_output="n"
   sequence="101"
   send_to="12"
>
<send>EnableTriggerGroup("end_gag", false)</send>
</trigger>

</triggers>

<aliases>
<alias
   script="chat_echo_wrap"
   match="^chats? echo( on| off| channels| nonchannels)?$"
   enabled="y"
   regexp="y"
   sequence="100"
   ignore_case="y"
></alias>
</aliases>

<!--  Script  -->

<script>
<![CDATA[

require "pairsbykeys"

local init_nonchannel_keys = {"Auction_House", "Auto_Events", "Clan_Info", "Friend_Info", "HighScore", "Info", "IMM_Logs", "News_Flash", "RP_Story", "Battle_Arena"} --"remote_socials"
local init_nonchannel_pairs = {["Auction_House"]="Auction_House", ["Auto_Events"]="Auto-Event", ["Clan_Info"]="Clan-Info", ["Friend_Info"]="Friend-Info", ["HighScore"]="HighScore", ["Info"]="Info", ["IMM_Logs"]="IMM Logs", ["News_Flash"]="NEWS-FLASH", ["RP_Story"]="RP-STORY", ["Battle_Arena"]="BATTLE ARENA"} --, ["remote_socials"]="Remote Socials"
local init_channel_keys = {"Question", "Clan", "FriendChat", "IMM", "Music", "Newbie", "OOC", "Race", "RP_Chat", "say", "say_get", "Scouter", "Wartalk", "Yell"}
local init_channel_pairs = {["Question"]="Question", ["Clan"]="Clan", ["FriendChat"]="FriendChat", ["IMM"]="IMM", ["Music"]="Music", ["Newbie"]="Newbie", ["OOC"]="OOC", ["Race"]="Race", ["RP_Chat"]="RP_Chat", ["say"]="say", ["say_get"]="say_get", ["Scouter"]="Scouter", ["Wartalk"]="Wartalk", ["Yell"]="Yell"}

require "DBR_colors"

channels_table = {}
nonchannels_table = {}
loadstring(GetVariable("channels_table") or "")()
loadstring(GetVariable("nonchannels_table") or "")()

function nonchannel_echo(name)
   if nonchannels_table[name]["echo"] then
      return true
   end
   return false
end

function channel_echo(name)
   if channels_table[name]["echo"] then
      return true
   end
   return false
end

function addDefaultNonChannels()
   for i,v in ipairs(init_nonchannel_keys) do
      nonchannels_table[v] = nonchannels_table[v] or {["echo"]=true}
      EnableTrigger(v, not nonchannel_echo(v))
   end
end

function addDefaultChannels()
   for i,v in ipairs(init_channel_keys) do
      channels_table[v] = channels_table[v] or {["echo"]=true}
      EnableTrigger(v, not channel_echo(v))
   end
end

addDefaultChannels()
addDefaultNonChannels()

function non_channel (name, line, wildcards, styles)
   EnableTriggerGroup("end_gag", true) -- gags trailing blank line
end

function channel (name, line, wildcards, styles)
   EnableTriggerGroup("end_gag", true) -- gags trailing blank line
end

function rejection_message()
  Note()
  ColourNote ("yellow", "", "You can't hide messages with \"chats echo on\" or \"chats echo custom\" unless you have at least one secondary capture plugin active.")
  ColourNote ("yellow", "", "If you want to disable certain channels, do it with the available in-game commands.")
  ColourNote ("yellow", "", [[Otherwise you must have at least one plugin which uses the following line of code before disabling chat display in the client is allowed:   CallPlugin("55616ea13339bc68e963e1f8", "enable_hiding", true, GetPluginID())]])
  Note()
end

function chat_echo (toggle)
   if toggle == "" then
      ColourNote("yellow", "", "Current channel echo status: ")
      for k,v in pairsByKeys(channels_table) do
         ColourTell("yellow", "", tostring(k).." ")
         ColourNote((v["echo"] and "lime") or "red", "", tostring(v["echo"] or "false"))
      end
      Note("") -- just put this here now to show that I have some error...
      ColourNote("yellow", "", "Current non-channel echo status: ")
      for b,c in pairsByKeys(nonchannels_table) do
         ColourTell("yellow", "", tostring(b).." ")
         ColourNote((c["echo"] and "lime") or "red", "", tostring(c["echo"] or "false"))
      end
      Note("")
   elseif toggle == "on" then
      for k,v in pairs(channels_table) do
         channels_table[k]["echo"] = true
      end
      ColourNote ("yellow", "", "All chats are now", "lime", "", " shown ", "yellow", "", "in the main window.")
      ColourNote ("yellow", "", "Note: This does not affect \"other\" (non-channel) messages, which must be toggled separately.")
      Note("")
   elseif toggle == "off" then
      for k,v in pairs(channels_table) do
         channels_table[k]["echo"] = false
      end
      ColourNote ("yellow", "", "All chats are now", "red", "", " hidden ", "yellow", "", "in the main window.")
      ColourNote ("yellow", "", "Note: This does not affect \"other\" (non-channel) messages, which must be toggled separately.")
      Note("")
   elseif toggle == "channels" then
      local defaults = {}
      for k,v in pairs(channels_table) do
         defaults[k] = v["echo"]
      end
      local echo_result = utils.multilistbox("Choose which channels to show in the main window.", "Channel Echo Selection", init_channel_pairs, defaults)
      if echo_result then
         for k,v in pairs(channels_table) do
            v["echo"] = echo_result[k]
            EnableTrigger(k, not channel_echo(k))
         end
      end
   elseif toggle == "nonchannels" then
      local defaults = {}
      for k,v in pairs(nonchannels_table) do
         defaults[k] = v["echo"]
      end
      local echo_result = utils.multilistbox("Choose which non-channel to show in the main window.", "Non-Channel Echo Selection", init_nonchannel_pairs, defaults)
      if echo_result then
         for k,v in pairs(nonchannels_table) do
            v["echo"] = echo_result[k]
            EnableTrigger(k, not nonchannel_echo(k))
         end
      end
   end -- if

   SaveState()
end

function chat_echo_wrap (name, line, wildcards)
   chat_echo(Trim(wildcards[1]):lower())
end -- chat_echo

require "serialize"
function OnPluginSaveState()
   SetVariable("channels_table", serialize.save("channels_table"))
   SetVariable("nonchannels_table", serialize.save("nonchannels_table"))
end

function getmemoryusage()
  collectgarbage('collect')
  return collectgarbage('count')
end

]]>
</script>
</muclient>
